openapi: 3.0.0
info:
  title: Example API Platform
  version: 1.0.0
  description: Тестовое описание платформы
  contact:
    name: Anton Golomazov
    url: 'https://vk.com/agolomazov'
    email: cesear@bk.ru
  termsOfService: 'https://yourlinktodocument.com'
  license:
    name: unlicense
    url: 'https://linktolicense.com'
servers:
  - url: 'http://localhost:3000'
x-json-schema-faker:
  locale: ru
  min-items: 2
  max-items: 10
  resolve-json-path: true
paths:
  /projects:
    get:
      summary: 'Получение списка проектов, доступных текущему пользователю'
      tags:
        - Проекты
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/projects/ProjectsListResponse.yaml
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      operationId: getProjects
      description: Получить список доступных проектов
      security: []
    post:
      summary: Создание проекта
      operationId: createProject
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/projects/ProjectModel.yaml
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      description: Создание сущности Проект
      tags:
        - Проекты
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../models/projects/ProjectRequestBody.yaml
        description: ''
  '/blog/posts/{id}':
    parameters:
      - $ref: '#/components/parameters/IDModel'
    get:
      summary: Получение поста по его ID
      tags:
        - Блог
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/blog/BlogPostModel.yaml
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      operationId: getPostById
      description: Получение поста по ID
      security: []
    put:
      summary: Обновление поста по ID
      operationId: updatePostById
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/blog/BlogPostModel.yaml
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      description: Обновление поста
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../models/blog/BlogPostModel.yaml
        description: ''
      tags:
        - Блог
  /blog/posts:
    get:
      summary: Получение списка постов
      tags:
        - Блог
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/blog/BlogListPostsResponse.yaml
      operationId: getPosts
      description: Получить все доступные записи из блога
      security: []
components:
  schemas: {}
  securitySchemes:
    jwt:
      type: http
      scheme: bearer
  parameters:
    IDModel:
      name: id
      in: path
      required: true
      schema:
        type: string
        format: uuid
      description: ID сущности
tags:
  - name: Блог
  - name: Проекты
security:
  - jwt: []
